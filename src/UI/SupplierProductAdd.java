/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Class.ConnectionProvider;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class SupplierProductAdd extends javax.swing.JFrame {

    /**
     * Creates new form InventryAdd
     */
    
    public SupplierProductAdd() {
        initComponents();
        //setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        setVisible(true);
        //loadProducts();
        //loadSupplier();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        
    }
    
    public void loadProducts(){
    
        try {
            Connection con= ConnectionProvider.getInstance().getDBConnection();
            
            String query="SELECT * FROM product";
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs=ps.executeQuery();
            
            while(rs.next()){
                String ProductName=rs.getString("productname");
                cb_products.addItem(ProductName);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadSupplier(){
    
        try {
            Connection con= ConnectionProvider.getInstance().getDBConnection();
            
            String query="SELECT * FROM supplier";
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs=ps.executeQuery();
            
            while(rs.next()){
                String SupplierName=rs.getString("companyname");
                cb_supplier.addItem(SupplierName);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //Check input Fields
    public boolean checkInputs(){
    
        if(!txt_ProductId.getText().isEmpty()){
            
            if(!txt_SupplierId.getText().isEmpty()){
                
                if(!txt_price.getText().isEmpty()){
                    
                    if(!txt_warranty.getText().isEmpty()){
                        
                        if(!txt_qty.getText().isEmpty()){
                            
                            try{
                                Double.parseDouble(txt_price.getText());
                        
                                try{
                                    Integer.parseInt(txt_qty.getText());
                                    return true;
                            
                                }catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "Invalid Quantity Input!!!");
                                    return false;
                                }
                        
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Invalid Price Input!!!");
                                return false;
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Quantity Field cannot be Empty");
                            return false;
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Warranty Field cannot be Empty");
                        return false;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Price Field cannot be Empty");
                    return false;
                }
            }    
            else{
                 JOptionPane.showMessageDialog(null, "Supplier Field cannot be Empty");   
                 return false;
            }  
        }    
        else{
                 JOptionPane.showMessageDialog(null, "Product Field cannot be Empty");  
                 return false;
        }              
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_ProductId = new javax.swing.JTextField();
        txt_SupplierId = new javax.swing.JTextField();
        txt_price = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btn_insert = new javax.swing.JButton();
        cb_supplier = new javax.swing.JComboBox<>();
        cb_products = new javax.swing.JComboBox<>();
        txt_warranty = new javax.swing.JTextField();
        txt_qty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btn_newProduct = new javax.swing.JButton();
        btn_newSupplier = new javax.swing.JButton();
        txt_validate = new javax.swing.JLabel();
        txt_validate1 = new javax.swing.JLabel();
        txt_validate2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NA | Supplier Product Add");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 31, 63));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/smart devices.jpg"))); // NOI18N
        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel7)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Product Name");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Supplier Name");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Warranty Period");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("Price / Unit");

        txt_ProductId.setEnabled(false);

        txt_SupplierId.setEnabled(false);
        txt_SupplierId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SupplierIdActionPerformed(evt);
            }
        });

        txt_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_priceActionPerformed(evt);
            }
        });
        txt_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_priceKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("Minimum Qty/Order");

        btn_insert.setBackground(new java.awt.Color(255, 51, 51));
        btn_insert.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        btn_insert.setForeground(new java.awt.Color(255, 255, 255));
        btn_insert.setText("ADD");
        btn_insert.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        cb_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_supplierActionPerformed(evt);
            }
        });

        cb_products.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_productsActionPerformed(evt);
            }
        });

        txt_warranty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_warrantyActionPerformed(evt);
            }
        });
        txt_warranty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_warrantyKeyReleased(evt);
            }
        });

        txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_qtyKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Product ID");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel8.setText("Supplier ID");

        btn_newProduct.setText("New Product");
        btn_newProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newProductActionPerformed(evt);
            }
        });

        btn_newSupplier.setText("New Supplier");
        btn_newSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newSupplierActionPerformed(evt);
            }
        });

        txt_validate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_validateKeyReleased(evt);
            }
        });

        txt_validate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_validate1KeyReleased(evt);
            }
        });

        txt_validate2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_validate2KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(319, 319, 319))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_price)
                                .addComponent(txt_SupplierId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_ProductId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_qty)
                                .addComponent(cb_supplier, 0, 223, Short.MAX_VALUE)
                                .addComponent(cb_products, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txt_warranty, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_newProduct)
                                    .addComponent(btn_newSupplier))
                                .addContainerGap(88, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_validate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_validate2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_validate1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_products, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_newProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_ProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cb_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_newSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txt_SupplierId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_validate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_validate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_warranty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_validate2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(52, 52, 52)
                .addComponent(btn_insert)
                .addGap(157, 157, 157))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
        if(checkInputs()){

            try {
                Connection con = ConnectionProvider.getInstance().getDBConnection();
                PreparedStatement ps= con.prepareStatement("INSERT INTO supplierinventory(productid,supplierid,price,warranty,minquantity) VALUES(?,?,?,?,?)");
                ps.setInt(1, Integer.parseInt(txt_ProductId.getText()));
                ps.setInt(2, Integer.parseInt(txt_SupplierId.getText()));
                ps.setDouble(3, Double.parseDouble(txt_price.getText()));
                ps.setInt(4, Integer.parseInt(txt_warranty.getText()));
                ps.setInt(5, Integer.parseInt(txt_qty.getText()));

                //Finally Insert
                ps.executeUpdate();
                //showOnTable();
                JOptionPane.showMessageDialog(null, "Successfully Data Inserted!!!");
                //ProductSupplier_Window obj=new ProductSupplier_Window();
                //obj.setVisible(true);
                this.dispose();
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
                //Logger.getLogger(Product_Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btn_insertActionPerformed

    private void txt_SupplierIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SupplierIdActionPerformed
        
    }//GEN-LAST:event_txt_SupplierIdActionPerformed

    private void cb_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_supplierActionPerformed
        try {
            String sName=cb_supplier.getSelectedItem().toString();
            
            Connection con = ConnectionProvider.getInstance().getDBConnection();
            String query="SELECT * FROM supplier WHERE companyname='"+sName+"'";
            PreparedStatement ps = con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                Integer sNum=rs.getInt("supplierid");
                txt_SupplierId.setText(sNum.toString());
            }
        } catch (SQLException ex) {
            Logger.getLogger(SupplierProductAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cb_supplierActionPerformed

    private void cb_productsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_productsActionPerformed
        try {
            String pName=cb_products.getSelectedItem().toString();
            
            Connection con = ConnectionProvider.getInstance().getDBConnection();
            String query="SELECT * FROM product WHERE productname='"+pName+"'";
            PreparedStatement ps = con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                Integer pNum=rs.getInt("productid");
                txt_ProductId.setText(pNum.toString());
            }
        } catch (SQLException ex) {
            Logger.getLogger(SupplierProductAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cb_productsActionPerformed

    private void txt_warrantyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_warrantyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_warrantyActionPerformed

    private void txt_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_priceActionPerformed

    private void btn_newProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newProductActionPerformed
        InventryAdd obj= new InventryAdd();
        obj.setVisible(true);
        obj.setLocationRelativeTo(null);
    }//GEN-LAST:event_btn_newProductActionPerformed

    private void btn_newSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newSupplierActionPerformed
        new Supplier().setVisible(true);
        
    }//GEN-LAST:event_btn_newSupplierActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        loadProducts();
        loadSupplier();
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        cb_products.removeAllItems();
        cb_supplier.removeAllItems();
    }//GEN-LAST:event_formWindowLostFocus

    private void txt_validateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_validateKeyReleased

    }//GEN-LAST:event_txt_validateKeyReleased

    private void txt_validate1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_validate1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_validate1KeyReleased

    private void txt_validate2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_validate2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_validate2KeyReleased

    private void txt_priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_priceKeyReleased
        String priceMin = txt_price.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(priceMin);
        
        if (!match.matches()) {
            txt_validate.setForeground(Color.red);
            txt_validate.setText("Price should be Numeric!!!");
            
        } else {
            txt_validate.setText("");
            
        }
        
        if(priceMin.isEmpty()){
            txt_validate.setText("");
        }    
    }//GEN-LAST:event_txt_priceKeyReleased

    private void txt_warrantyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_warrantyKeyReleased
        String warranty = txt_warranty.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(warranty);
        
        if (!match.matches()) {
            txt_validate1.setForeground(Color.red);
            txt_validate1.setText("Warranty should be Numeric!!!");
            
        } else {
            txt_validate1.setText("");
            
        }
        
        if(warranty.isEmpty()){
            txt_validate1.setText("");
        }    
    }//GEN-LAST:event_txt_warrantyKeyReleased

    private void txt_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_qtyKeyReleased
        String qty = txt_qty.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(qty);
        
        if (!match.matches()) {
            txt_validate2.setForeground(Color.red);
            txt_validate2.setText("Quantity should be Numeric!!!");
            
        } else {
            txt_validate2.setText("");
            
        }
        
        if(qty.isEmpty()){
            txt_validate2.setText("");
        }    
    }//GEN-LAST:event_txt_qtyKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierProductAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierProductAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierProductAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierProductAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierProductAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton btn_newProduct;
    private javax.swing.JButton btn_newSupplier;
    private javax.swing.JComboBox<String> cb_products;
    private javax.swing.JComboBox<String> cb_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txt_ProductId;
    private javax.swing.JTextField txt_SupplierId;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JLabel txt_validate;
    private javax.swing.JLabel txt_validate1;
    private javax.swing.JLabel txt_validate2;
    private javax.swing.JTextField txt_warranty;
    // End of variables declaration//GEN-END:variables
}
