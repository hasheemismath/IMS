/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Class.Analyse;
import Class.ConnectionProvider;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class AnalysePurchase extends javax.swing.JFrame {

    /**
     * Creates new form InventryAdd
     */
    
    public AnalysePurchase() {
        initComponents();
        setVisible(true);
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        loadProducts();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null); 
    }
    
    public void loadProducts(){
    
        try {
            Connection con= ConnectionProvider.getInstance().getDBConnection();
            
            String query="SELECT * FROM product";
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs=ps.executeQuery();
            
            while(rs.next()){
                String ProductName=rs.getString("productname");
                cb_products.addItem(ProductName);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    //Check input Fields
    public boolean checkInputs(){
    
        if(!txt_ProductId.getText().isEmpty()){
            
            try{
            
                if(txt_priceMin.getText().isEmpty())
                    txt_priceMin.setText("0");
                if(txt_priceMax.getText().isEmpty())
                    txt_priceMax.setText("0");
                double priceMin = Double.parseDouble(txt_priceMin.getText());
                double priceMax = Double.parseDouble(txt_priceMax.getText());
            
                if(priceMin<0 || priceMax<0){
                    JOptionPane.showMessageDialog(null, "Price Field cannot be Negative Value");
                    return false;
                }
            
                if(txt_warranty.getText().isEmpty())
                    txt_warranty.setText("0");
                int warranty = Integer.parseInt(txt_warranty.getText());
            
                if(warranty<0 ){
                    JOptionPane.showMessageDialog(null, "Quantity Field cannot be Negative Value");
                    return false;
                }
            
                if(txt_qty.getText().isEmpty())
                    txt_qty.setText("0");
                int qty = Integer.parseInt(txt_qty.getText());
            
                if(qty<0){
                    JOptionPane.showMessageDialog(null, "Quantity Field cannot be Negative Value");
                    return false;
                }
                
                return true;
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Insert only Numeric values for Price,Warranty and Quantity!!!");
                return false;
            }
            
                
        }    
        else{
                 JOptionPane.showMessageDialog(null, "Product Field cannot be Empty");  
                 return false;
        }            
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_ProductId = new javax.swing.JTextField();
        txt_priceMin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btn_insert = new javax.swing.JButton();
        cb_products = new javax.swing.JComboBox<>();
        txt_warranty = new javax.swing.JTextField();
        txt_qty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_priceMax = new javax.swing.JTextField();
        txt_validateMax = new javax.swing.JLabel();
        txt_validate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NA | Analyse Purchase");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 31, 63));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/smart devices.jpg"))); // NOI18N
        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel7)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel7)
                .addContainerGap(439, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Product Name");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Maximum");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Warranty Period (Months)");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("Price / Unit");

        txt_ProductId.setEnabled(false);

        txt_priceMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_priceMinActionPerformed(evt);
            }
        });
        txt_priceMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_priceMinKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("Quantity to be Ordered");

        btn_insert.setBackground(new java.awt.Color(255, 51, 51));
        btn_insert.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        btn_insert.setForeground(new java.awt.Color(255, 255, 255));
        btn_insert.setText("Analyse ");
        btn_insert.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        cb_products.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_productsActionPerformed(evt);
            }
        });

        txt_warranty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_warrantyActionPerformed(evt);
            }
        });
        txt_warranty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_warrantyKeyReleased(evt);
            }
        });

        txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_qtyKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Product ID");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel8.setText("Minimum");

        txt_priceMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_priceMaxActionPerformed(evt);
            }
        });
        txt_priceMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_priceMaxKeyReleased(evt);
            }
        });

        txt_validateMax.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txt_validate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt_validate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_validateMax, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_validate, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_products, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_ProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(313, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_priceMin, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_priceMax, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_warranty, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_qty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_validate, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_validateMax, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cb_products, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_ProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_priceMin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_priceMax, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_warranty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btn_insert))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed

        if(checkInputs()){

            String ProductId=txt_ProductId.getText();
            double priceMin = Double.parseDouble(txt_priceMin.getText());
            double priceMax = Double.parseDouble(txt_priceMax.getText());
            int warranty = Integer.parseInt(txt_warranty.getText());
            int qty = Integer.parseInt(txt_qty.getText());
            
            
            
            Analyse analyse = new Analyse(ProductId, priceMin, priceMax, warranty, qty);
            AnalysePurchaseTable obj= new AnalysePurchaseTable(analyse);
            obj.setVisible(true);
            obj.setLocationRelativeTo(null);
            dispose();
            
        }
        
    }//GEN-LAST:event_btn_insertActionPerformed

    private void cb_productsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_productsActionPerformed
        try {
            String pName=cb_products.getSelectedItem().toString();
            
            Connection con = ConnectionProvider.getInstance().getDBConnection();
            String query="SELECT * FROM product WHERE productname='"+pName+"'";
            PreparedStatement ps = con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                Integer pNum=rs.getInt("productid");
                txt_ProductId.setText(pNum.toString());
            }
        } catch (SQLException ex) {
            Logger.getLogger(AnalysePurchase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cb_productsActionPerformed

    private void txt_warrantyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_warrantyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_warrantyActionPerformed

    private void txt_priceMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_priceMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_priceMinActionPerformed

    private void txt_priceMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_priceMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_priceMaxActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    boolean qty_results;
    boolean warranty_results;
    boolean pMax_results;
    boolean pMin_results;
    
    private void txt_priceMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_priceMinKeyReleased
        String priceMin = txt_priceMin.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(priceMin);

        pMin_results = !match.matches();
        
        if (pMin_results) {
            txt_validate.setForeground(Color.red);
            txt_validate.setText("Price should be Numeric!!!");
            
        } else {
            txt_validate.setText("");
            
        }
        
        if(priceMin.isEmpty()){
            txt_validate.setText("");
        }    
    }//GEN-LAST:event_txt_priceMinKeyReleased

    private void txt_priceMaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_priceMaxKeyReleased
        String priceMax = txt_priceMax.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(priceMax);

        pMax_results = !match.matches();
        
        if (pMax_results) {
            txt_validate.setForeground(Color.red);
            txt_validate.setText("Price should be Numeric!!!");
            
        } else {
            txt_validate.setText("");
            
        }
        
        if(priceMax.isEmpty()){
            txt_validate.setText("");
        }    
    }//GEN-LAST:event_txt_priceMaxKeyReleased

    private void txt_warrantyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_warrantyKeyReleased
        String warranty = txt_warranty.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(warranty);

        warranty_results = !match.matches();

        if (warranty_results) {
            txt_validate.setForeground(Color.red);
            txt_validate.setText("Warrany should be Numeric!!!");
            //txt_validateMax.setText("Maximum Warranty can be 99");
        } else {
            txt_validate.setText("");
            txt_validateMax.setText("");
        }
        
        if(warranty.isEmpty()){
            txt_validate.setText("");
            txt_validateMax.setText("");
        }    
    }//GEN-LAST:event_txt_warrantyKeyReleased

    private void txt_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_qtyKeyReleased
        String qty = txt_qty.getText();
        String PATTERN = "^[0-9]+$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(qty);

        qty_results = !match.matches();

        if (qty_results) {
            txt_validate.setForeground(Color.red);
            txt_validate.setText("Quantity amount is Invalid!!!");
            //txt_validateMax.setText("Maximum Value that could be Ordered is 99");
        } else {
            txt_validate.setText("");
            txt_validateMax.setText("");
        }
        
        if(qty.isEmpty()){
            txt_validate.setText("");
            txt_validateMax.setText("");
        }    
    }//GEN-LAST:event_txt_qtyKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnalysePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnalysePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnalysePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnalysePurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnalysePurchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_insert;
    private javax.swing.JComboBox<String> cb_products;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txt_ProductId;
    private javax.swing.JTextField txt_priceMax;
    private javax.swing.JTextField txt_priceMin;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JLabel txt_validate;
    private javax.swing.JLabel txt_validateMax;
    private javax.swing.JTextField txt_warranty;
    // End of variables declaration//GEN-END:variables
}
